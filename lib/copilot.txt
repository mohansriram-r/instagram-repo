App file :
import 'package:flutter/material.dart';
import 'package:instagram_clone/main_app.dart';
import 'package:instagram_clone/providers/user_providers.dart';
import 'package:instagram_clone/utils/theme/theme.dart';
import 'package:provider/provider.dart';

class App extends StatefulWidget {
  const App({super.key});

  @override
  State<App> createState() => _AppState();
}

class _AppState extends State<App> {
  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(
          create: (_) => UserProviders(),
        ),
      ],
      child: MaterialApp(
          debugShowCheckedModeBanner: false,
          title: 'Instagram-Clone',
          theme: CThemeData.darkThemeData,
          home: const MainApp()),
    );
  }
}

MainApp :

import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:instagram_clone/presentation/home_page/home_screen.dart';
import 'package:instagram_clone/presentation/login_page/login_screen.dart';
import 'package:instagram_clone/providers/user_providers.dart';
import 'package:provider/provider.dart';

class MainApp extends StatefulWidget {
  const MainApp({super.key});

  @override
  State<MainApp> createState() => _MainAppState();
}

class _MainAppState extends State<MainApp> {
  @override
  void initState() {
    super.initState();
    addData();
  }

  addData() async {
    UserProviders _userProvider = Provider.of(context, listen: false);
    await _userProvider.refreshUser();
  }

  @override
  Widget build(BuildContext context) {
    return StreamBuilder(
      stream: FirebaseAuth.instance.authStateChanges(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.active) {
          if (snapshot.hasData) {
            return const HomeScreen();
          } else if (snapshot.hasError) {
            return Center(
              child: Text(snapshot.error.toString()),
            );
          }
        }
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Center(
            child: CircularProgressIndicator(
              color: Colors.white,
            ),
          );
        }

        return const SignInScreen();
      },
    );
  }
}

Main :

import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:instagram_clone/app.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(const App());
}

UserProviders :
import 'package:flutter/foundation.dart';
import 'package:instagram_clone/models/user_model.dart';
import 'package:instagram_clone/service/auth_service.dart';

class UserProviders extends ChangeNotifier {
  UserM? _user;
  final AuthService _authService = AuthService();

  UserM get getUser => _user!;

  Future<void> refreshUser() async {
    UserM user = await _authService.getCurrentUserData();
    _user = user;
    print(_user!.email);
    notifyListeners();
  }
}

AuthService :
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/foundation.dart';
import 'package:instagram_clone/models/user_model.dart';
import 'package:instagram_clone/service/storage_service.dart';

class AuthService {
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  Future<UserM> getCurrentUserData() async {
    User currentUser = _auth.currentUser!;

    DocumentSnapshot snapshot =
        await _firestore.collection('users').doc(currentUser.uid).get();

    return UserM.fromSnap(snapshot);
  }

  Future<String> signUpUser({
    required String email,
    required String password,
    required String username,
    required String bio,
    required Uint8List file,
  }) async {
    String res = '';
    try {
      if (email.isNotEmpty ||
          password.isNotEmpty ||
          username.isNotEmpty ||
          bio.isNotEmpty ||
          // ignore: unnecessary_null_comparison
          file != null) {
        UserCredential userCredential =
            await _auth.createUserWithEmailAndPassword(
          email: email,
          password: password,
        );

        String photoUrl = await StorageService()
            .uploadImageToStorage('profilePic', file, false);

        UserM user = UserM(
          email: email,
          uid: userCredential.user!.uid,
          photoUrl: photoUrl,
          bio: bio,
          userName: username,
          followers: [],
          following: [],
        );

        await _firestore
            .collection('users')
            .doc(userCredential.user!.uid)
            .set(user.toJson());

        res = 'sucess';
      }
    } catch (e) {
      res = e.toString();
    }

    return res;
  }

  Future<String> loginUser({
    required String email,
    required String password,
  }) async {
    String res = '';
    try {
      if (email.isNotEmpty || password.isNotEmpty) {
        await _auth.signInWithEmailAndPassword(
            email: email, password: password);
        res = 'sucess';
      } else {
        res = 'Please enter all the fields';
      }
    } catch (e) {
      res = e.toString();
    }

    return res;
  }
}

HomeScreen :
import 'package:flutter/material.dart';
import 'package:instagram_clone/models/user_model.dart';
import 'package:instagram_clone/providers/user_providers.dart';
import 'package:provider/provider.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  @override
  Widget build(BuildContext context) {
    UserM? user = Provider.of<UserProviders>(context).getUser;
    return Scaffold(
      body: Center(
        child: Text(user.userName),
      ),
    );
  }
}


error :
Restarted application in 863ms. I/flutter ( 9237): Init called W/DynamiteModule( 9237): Local module descriptor class for com.google.android.gms.providerinstaller.dynamite not found. I/DynamiteModule( 9237): Considering local module com.google.android.gms.providerinstaller.dynamite:0 and remote module com.google.android.gms.providerinstaller.dynamite:0 W/ProviderInstaller( 9237): Failed to load providerinstaller module: No acceptable module com.google.android.gms.providerinstaller.dynamite found. Local version is 0 and remote version is 0. W/ProviderInstaller( 9237): Failed to report request stats: com.google.android.gms.common.security.ProviderInstallerImpl.reportRequestStats [class android.content.Context, long, long] D/TrafficStats( 9237): tagSocket(155) with statsTag=0xffffffff, statsUid=-1 ════════ Exception caught by widgets library ═══════════════════════════════════ The following _TypeError was thrown building HomeScreen(dirty, dependencies: [_InheritedProviderScope<UserProviders?>], state: _HomeScreenState#a3371):Null check operator used on a null value The relevant error-causing widget was: HomeScreen HomeScreen:file:///C:/dev/projects/instagram-repo/lib/app.dart:34:30 When the exception was thrown, this was the stack: #0 UserProviders.getUser (package:instagram_clone/providers/user_providers.dart:9:29) user_providers.dart:9 #1 _HomeScreenState.build (package:instagram_clone/presentation/home_page/home_screen.dart:28:55) home_screen.dart:28 #2 StatefulElement.build (package:flutter/src/widgets/framework.dart:5743:27) framework.dart:5743 #3 ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5631:15)#4 StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5794:11) framework.dart:5794 #5 Element.rebuild (package:flutter/src/widgets/framework.dart:5347:7) framework.dart:5347 #6 ComponentElement._firstBuild (package:flutter/src/widgets/framework.dart:5613:5) framework.dart:5613 #7 StatefulElement._firstBuild (package:flutter/src/widgets/framework.dart:5785:11) framework.dart:5785 #8 ComponentElement.mount (package:flutter/src/widgets/framework.dart:5607:5) framework.dart:5607 #9 Element.inflateWidget (package:flutter/src/widgets/framework.dart:4480:16) framework.dart:4480 #10 Element.updateChild (package:flutter/src/widgets/framework.dart:3957:20) framework.dart:3957 #11 ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5656:16) framework.dart:5656 #12 StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5794:11) framework.dart:5794 #13 Element.rebuild (package:flutter/src/widgets/framework.dart:5347:7)#14 BuildScope._tryRebuild (package:flutter/src/widgets/framework.dart:2694:15) framework.dart:2694 #15 BuildScope._flushDirtyElements (package:flutter/src/widgets/framework.dart:2753:11) framework.dart:2753 #16 BuildOwner.buildScope (package:flutter/src/widgets/framework.dart:3048:18) framework.dart:3048 #17 WidgetsBinding.drawFrame (package:flutter/src/widgets/binding.dart:1176:21) binding.dart:1176 #18 RendererBinding._handlePersistentFrameCallback (package:flutter/src/rendering/binding.dart:475:5) binding.dart:475 #19 SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1397:15) binding.dart:1397 #20 SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1318:9) binding.dart:1318 #21 SchedulerBinding.scheduleWarmUpFrame.<anonymous closure> (package:flutter/src/scheduler/binding.dart:1040:9) binding.dart:1040 #22 PlatformDispatcher.scheduleWarmUpFrame.<anonymous closure> (dart:ui/platform_dispatcher.dart:845:16) platform_dispatcher.dart:845 #26 _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:184:12)(elided 3 frames from class _Timer and dart:async-patch) ════════════════════════════════════════════════════════════════════════════════ E/flutter ( 9237): [ERROR:flutter/runtime/dart_vm_initializer.cc(40)] Unhandled Exception: type 'Null' is not a subtype of type 'String' E/flutter ( 9237): #0 UserM.fromSnap (package:instagram_clone/models/user_model.dart:38:22) E/flutter ( 9237): #1 AuthService.getCurrentUserData (package:instagram_clone/service/auth_service.dart:17:18) E/flutter ( 9237): <asynchronous suspension> E/flutter ( 9237): #2 UserProviders.refreshUser (package:instagram_clone/providers/user_providers.dart:12:18) E/flutter ( 9237): <asynchronous suspension> E/flutter ( 9237): #3 _HomeScreenState.addData (package:instagram_clone/presentation/home_page/home_screen.dart:23:5)E/flutter ( 9237): <asynchronous suspension> E/flutter ( 9237): W/System ( 9237): Ignoring header X-Firebase-Locale because its value was null. W/LocalRequestInterceptor( 9237): Error getting App Check token; using placeholder token instead. Error: com.google.firebase.FirebaseException: No AppCheckProvider installed. D/TrafficStats( 9237): tagSocket(5) with statsTag=0xffffffff, statsUid=-1 D/FirebaseAuth( 9237): Notifying id token listeners about user ( 6bsUsMaHl5gYPikM8W4YnMP1TBg2 ). D/TrafficStats( 9237): tagSocket(155) with statsTag=0xffffffff, statsUid=-1 D/TrafficStats( 9237): tagSocket(156) with statsTag=0xffffffff, statsUid=-1